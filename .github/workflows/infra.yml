name: "Terraform"

on:

  workflow_dispatch:
    inputs:
      infra-action:
        type: choice
        description: Infra action to perform
        options:
        - deploy
        - decomission
  pull_request:

env:
  TF_VAR_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}   # Azure Tenant Subscription ID
  TF_VAR_CLIENT_ID: ${{ secrets.CLIENT_ID }}               # Service Principal App ID
  TF_VAR_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}       # Service Principal Password
  TF_VAR_TENANT_ID: ${{ secrets.TENANT_ID }}               # Azure Tenant ID

jobs:
  deploy:
    name: "Terraform: Deploy Infrastructure"
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.infra-action == 'deploy' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # - name: Terraform Format
      #   id: fmt
      #   working-directory: infra
      #   run: terraform fmt -check

      - name: Terraform Init
        id: init
        working-directory: infra
        run: terraform init

      - name: Terraform Validate
        id: validate
        working-directory: infra
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        working-directory: infra
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Apply
        working-directory: infra
        run: terraform apply -auto-approve -input=false

  decomission:
    name: "Terraform: Decommission Infrastructure"
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.infra-action == 'decomission' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Destroy
        id: destroy
        working-directory: infra
        run: terraform destroy -auto-approve -input=false

